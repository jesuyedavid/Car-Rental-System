/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package supreme.rentals;
 import java.util.Arrays;
import java.awt.*;
import javax.swing.*;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

/**
 *
 * @author Jesuye
 */
public class MakeOrder extends javax.swing.JFrame {
    Connection conn=null;
    ResultSet rs=null;
    PreparedStatement pst=null;
    /**
     * Creates new form CarSearch
     */
        
    
    String carname=" ";
     String city=" ";
      String cusResNo=" ";
      String ncost=" ";
      int ndp=0;
    public MakeOrder() {
        initComponents();
        getContentPane().setBackground(Color.WHITE);
        getContentPane().setBounds(150, 150, 150, 150);
        conn=javaconnect.ConnecrDb();
        Show_table1();
    }
    
    public MakeOrder(String car, String location) {
        initComponents();
        getContentPane().setBackground(Color.WHITE);
        getContentPane().setBounds(150, 150, 150, 150);
        conn=javaconnect.ConnecrDb();
        carname = car;
        city=location;
        Show_table2();
    }
   
   public MakeOrder(String car) {       
        initComponents();
        getContentPane().setBackground(Color.WHITE);
        getContentPane().setBounds(150, 150, 150, 150);
        conn=javaconnect.ConnecrDb();
        carname=car;
        Show_table1();
   }
   
    private void Show_table1(){
        try{    
            String sql="select * from Vehicles where CarMake='"+carname+"'";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            selectCarTable.setModel(DbUtils.resultSetToTableModel(rs));
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }finally{
            try{
                rs.close();
                pst.close();
            }catch(Exception e){
                
            }
        }      
    }

   
    private void Show_table2(){
        try{    
            String sql="select * from Vehicles where CarMake='"+carname+"' and Locations='"+city+"'";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            selectCarTable.setModel(DbUtils.resultSetToTableModel(rs));
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }finally{
            try{
                rs.close();
                pst.close();
            }catch(Exception e){
                
            }
        }      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        selectCarTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        showCostText = new javax.swing.JTextField();
        calculateCostBut = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        lastNameText = new javax.swing.JTextField();
        driverLicText = new javax.swing.JTextField();
        firstNameText = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        pickupTextMonth = new javax.swing.JTextField();
        PickupTextDay = new javax.swing.JTextField();
        pickupTextYear = new javax.swing.JTextField();
        dropTextMonth = new javax.swing.JTextField();
        dropTextDay = new javax.swing.JTextField();
        dropTextYear = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Segoe Print", 1, 24)); // NOI18N
        jLabel1.setText("SUPREME CAR RENTALS");

        jLabel2.setText("MAKE ORDER IN FOUR EASY STEPS");

        selectCarTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(selectCarTable);
        selectCarTable.getAccessibleContext().setAccessibleName("");

        jLabel3.setText("Pick Up (mm/dd/yyyy)");

        jLabel4.setText("1. Select Vehicle");

        jLabel5.setText("2. Choose Dates");

        jLabel6.setText("Drop Off (mm/dd/yyyy)");

        jLabel7.setText("3. Calculate Cost");

        calculateCostBut.setText("Calculate");
        calculateCostBut.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                calculateCostButMouseClicked(evt);
            }
        });
        calculateCostBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateCostButActionPerformed(evt);
            }
        });

        jLabel9.setText("4. Enter Information");

        jLabel10.setText("First Name");

        jLabel11.setText("Last Name");

        jLabel12.setText("Driver Licence #");

        jButton2.setText("BACK");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("NEXT");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        PickupTextDay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PickupTextDayActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(166, 166, 166)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(showCostText)
                                        .addGap(26, 26, 26))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(335, 335, 335)))
                                .addGap(57, 57, 57))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel11)
                                        .addComponent(jLabel10))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addComponent(jLabel12)))
                                .addGap(52, 52, 52)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(driverLicText, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(firstNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lastNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addComponent(calculateCostBut)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(pickupTextMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(PickupTextDay, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(pickupTextYear, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(dropTextMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dropTextDay, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dropTextYear, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(222, 222, 222))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3)
                        .addGap(137, 137, 137))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pickupTextMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PickupTextDay, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pickupTextYear, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dropTextMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dropTextDay, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dropTextYear, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(showCostText, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(calculateCostBut)
                .addGap(18, 18, 18)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(firstNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(lastNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(driverLicText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        LandingPage s = new LandingPage();
        s.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

   public void insertTable(){
      int index = selectCarTable.getSelectedRow();
      TableModel model = selectCarTable.getModel();
       try{    
            String sql="Insert into OrderDetails (CusFN, CusLN, CusDL, PickupD, DropoffD, ResNo, CarMake, CarModel, "
                    + "CarColor, CarYear, NumSeats, DailyPrice, VehiID, Locations) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            pst=conn.prepareStatement(sql);
            pst.setString(1, firstNameText.getText());
            pst.setString(2, lastNameText.getText());
            pst.setString(3, driverLicText.getText());
            pst.setString(4, pickupTextMonth.getText()+PickupTextDay.getText()
                    +pickupTextYear.getText());
            pst.setString(5, dropTextMonth.getText()+dropTextDay.getText()
                    +dropTextYear.getText());
            cusResNo=(firstNameText.getText().substring(0, 1)+
                lastNameText.getText().substring(0, 1)+driverLicText.getText().substring(0, 5));
            pst.setString(6, cusResNo);
            pst.setString(7, model.getValueAt(index, 0).toString());
            pst.setString(8, model.getValueAt(index, 1).toString());
            pst.setString(9, model.getValueAt(index, 2).toString());
            pst.setString(10, model.getValueAt(index, 3).toString());
            pst.setString(11, model.getValueAt(index, 4).toString());
            pst.setString(12, model.getValueAt(index, 5).toString());
            pst.setString(13, model.getValueAt(index, 6).toString());
             pst.setString(14, model.getValueAt(index, 7).toString());
            pst.execute();
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }finally{
            try{
                pst.close();
            }catch(Exception e){
                
            }
        }
   }
   
   public void deleteRow(){//to delete a car when an order is made
       try{    
           String sql= "delete from Vehicles where vehiID=?";
            pst=conn.prepareStatement(sql);
            int index1 = selectCarTable.getSelectedRow();
            TableModel model1 = selectCarTable.getModel();           
            pst.setString(1, model1.getValueAt(index1, 6).toString());
            pst.execute();
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }finally{
            try{
                rs.close();
                pst.close();
            }catch(Exception e){
                
            }
        }
 }
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        Order norder = new Order();
        Vehicles nvehi = new Vehicles();        
        int index = selectCarTable.getSelectedRow();
        TableModel model = selectCarTable.getModel();
        
      
        nvehi.make=model.getValueAt(index, 0).toString();
        nvehi.model=model.getValueAt(index, 1).toString();
        nvehi.color=model.getValueAt(index, 2).toString();
        nvehi.year=model.getValueAt(index, 3).toString();
        
       /* if((boolean)model.getValueAt(index, 4)==true)nvehi.automaticGearbox= true;     
        else nvehi.automaticGearbox= false;         
        if((boolean)model.getValueAt(index, 5)==true)nvehi.airConditioner= true;
        else nvehi.airConditioner= false;*/
         
        nvehi.automaticGearbox= true;  
        nvehi.airConditioner= true;
        nvehi.numberSeats=Integer.parseInt(model.getValueAt(index, 4).toString());
        nvehi.dailyPrice=Integer.parseInt(model.getValueAt(index, 5).toString());
        norder.addCusFirstName(firstNameText.getText());
        norder.addCusLastName(lastNameText.getText());
        norder.addCusDrivLic(driverLicText.getText());
        norder.addPickupDate(pickupTextMonth.getText()+" "+
                PickupTextDay.getText()+" "+pickupTextYear.getText());
        norder.addDropoffDate(dropTextMonth.getText()+" "+
                dropTextDay.getText()+" "+dropTextYear.getText());
        norder.addAmountPaid(ncost);
        this.setVisible(false);
        ReceiptPage s = new ReceiptPage(nvehi, norder);
        this.setVisible(false);
        s.setVisible(true);       
        insertTable();
        deleteRow();

    }//GEN-LAST:event_jButton3ActionPerformed
 
    private void PickupTextDayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PickupTextDayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PickupTextDayActionPerformed

    private void calculateCostButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateCostButActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_calculateCostButActionPerformed

    private void calculateCostButMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_calculateCostButMouseClicked
        int index = selectCarTable.getSelectedRow();
        TableModel model = selectCarTable.getModel();
      
        int pickupmonth=Integer.parseInt(pickupTextMonth.getText());
        int pickupday=Integer.parseInt(PickupTextDay.getText());
         
        int pickupyear=Integer.parseInt(pickupTextYear.getText());
        int dropoffday=Integer.parseInt(dropTextDay.getText());
        int dropoffmonth=Integer.parseInt(dropTextMonth.getText());
        int dropoffyear=Integer.parseInt(dropTextYear.getText());
        double cost;
        
        //September, April, June and November
        if((pickupmonth>12)||(dropoffmonth>12))
            showCostText.setText("Invalid Month entry");
        else if(((pickupmonth==9)|(pickupmonth==4)|(pickupmonth==6)|(pickupmonth==11))&(pickupday>30))
            showCostText.setText("Invalid date entry\n Check date and try again");   
        else if(((dropoffmonth==9)|(dropoffmonth==4)|(dropoffmonth==6)|(dropoffmonth==11))&(dropoffmonth>30))
            showCostText.setText("Invalid date entry\n Check date and try again");
       
        //January, march, May, July, August, October, December
        else if(((pickupmonth==1)|(pickupmonth==3)|(pickupmonth==5)|(pickupmonth==7)|(pickupmonth==8)|
              (pickupmonth==10)|(pickupmonth==12))&(pickupday>31))
            showCostText.setText("Invalid date entry\n Check date and try again");   
        else if(((dropoffmonth==1)|(dropoffmonth==3)|(dropoffmonth==5)|(dropoffmonth==7)|(dropoffmonth==8)|
            (dropoffmonth==10)|(dropoffmonth==12))&(dropoffmonth>31))
            showCostText.setText("Invalid date entry\n Check date and try again"); 
        
        //For February
        else if((pickupmonth==2)&(pickupday>29))
            showCostText.setText("Invalid date entry\n Check date and try again");   
        else if((dropoffmonth==2)&(dropoffday>29))
            showCostText.setText("Invalid date entry\n Check date and try again");
        else if((pickupyear==dropoffyear)&&(dropoffmonth<pickupmonth))
            showCostText.setText("Invalid date entry\n Check date and try again");
        else if((pickupyear==dropoffyear)&&(dropoffmonth==pickupmonth)&&(pickupday>dropoffday))
            showCostText.setText("Invalid date entry\n Check date and try again");
        else{//Calculate month
            int[] days={31, 59 , 90, 120, 151, 181, 212, 243, 273, 304, 334, 365};
            int PickDayNum=(days[(pickupmonth-1)])+(pickupday);
            int DropDayNum=(days[dropoffmonth-1])+(dropoffday);
         
         
            if(dropoffyear>pickupyear)
                DropDayNum+=365;
         
            int rentDays= DropDayNum-PickDayNum;        
            cost=rentDays*Integer.parseInt(model.getValueAt(index, 5).toString());
            ncost=Double.toString(cost);
         
            if((dropoffmonth==pickupmonth)&&(dropoffday<pickupday))
                showCostText.setText("Invalid rental duration range");
            else if(dropoffyear>(pickupyear+1))
                showCostText.setText("Invalid rental duration range");
            else if((rentDays)>=180)//customer cant rent for more than 6months
                showCostText.setText("Invalid rental duration range");
            else
                showCostText.setText("$ "+Double.toString(cost));
    
        } 
    }//GEN-LAST:event_calculateCostButMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MakeOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MakeOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MakeOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MakeOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MakeOrder().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField PickupTextDay;
    private javax.swing.JButton calculateCostBut;
    private javax.swing.JTextField driverLicText;
    private javax.swing.JTextField dropTextDay;
    private javax.swing.JTextField dropTextMonth;
    private javax.swing.JTextField dropTextYear;
    private javax.swing.JTextField firstNameText;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lastNameText;
    private javax.swing.JTextField pickupTextMonth;
    private javax.swing.JTextField pickupTextYear;
    private javax.swing.JTable selectCarTable;
    private javax.swing.JTextField showCostText;
    // End of variables declaration//GEN-END:variables
}
